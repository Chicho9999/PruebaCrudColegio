// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PruebaCrudColegio.Infrastructure;

#nullable disable

namespace PruebaCrudColegio.Infrastructure.Migrations
{
    [DbContext(typeof(PruebaCrudColegioContext))]
    partial class PruebaCrudColegioContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PruebaCrudColegio.Core.Model.College", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("DateCreated")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("DateDeleted")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("DateUpdated")
                        .HasColumnType("datetimeoffset");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ID");

                    b.ToTable("College");

                    b.HasData(
                        new
                        {
                            ID = new Guid("9cbea81b-aada-4f31-8250-467bb3a5c0aa"),
                            Address = "Tucuman 868",
                            DateCreated = new DateTimeOffset(new DateTime(2024, 8, 21, 5, 2, 39, 713, DateTimeKind.Unspecified).AddTicks(5420), new TimeSpan(0, -3, 0, 0, 0)),
                            IsDeleted = false,
                            Name = "Normal",
                            UserID = new Guid("00000000-0000-0000-0000-000000000000")
                        });
                });

            modelBuilder.Entity("PruebaCrudColegio.Core.Model.Student", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CollegeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("DateCreated")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("DateDeleted")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("DateUpdated")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ID");

                    b.HasIndex("CollegeId");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            ID = new Guid("76a4f121-4800-44f2-93b7-6d8e06713da4"),
                            CollegeId = new Guid("9cbea81b-aada-4f31-8250-467bb3a5c0aa"),
                            DateCreated = new DateTimeOffset(new DateTime(2024, 8, 21, 5, 2, 39, 713, DateTimeKind.Unspecified).AddTicks(5522), new TimeSpan(0, -3, 0, 0, 0)),
                            FirstName = "Lisandro",
                            IsDeleted = false,
                            LastName = "Test Description",
                            UserID = new Guid("00000000-0000-0000-0000-000000000000")
                        });
                });

            modelBuilder.Entity("PruebaCrudColegio.Core.Model.Student", b =>
                {
                    b.HasOne("PruebaCrudColegio.Core.Model.College", "College")
                        .WithMany("Students")
                        .HasForeignKey("CollegeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("College");
                });

            modelBuilder.Entity("PruebaCrudColegio.Core.Model.College", b =>
                {
                    b.Navigation("Students");
                });
#pragma warning restore 612, 618
        }
    }
}
